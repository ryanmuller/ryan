

Learnstream Gluon is about using personalized learning pages.

It's similar to Fruit (or some of our recent discussion of Atomic) but with a focus on these PLPs. These involve both the community build-up of a course as well as the personalized content, exercises, and community discussion. You'll see how!

Again, we introduce an ordering on components in the course. Each component will have its own PLP. For a new course, we can even have a initial bank of questions that could help generate new components as the topic is explored (so it may work as a collaborative research tool as well). The pages work a little like a wiki, where you can also add resources such as video clips and exercises and have group discussions. Perhaps you can try to import initial content from Wikipedia, StackExchange sites, etc.

When you've just enrolled in a course, you'll be able to browse the PLPs in sequence, viewing all of the publicly available resources. You can also customize the pages by adding content (publicly or privately) and choosing which resources to include or hide. Figuring out how to store a combination of private and public edits seemed like a hassle, but that was before I knew about gitit. The obvious solution now seems that each user has a branch, and they can choose push to or merge with the public branches. Just need some kind of web interface on top of that... (and allowing git for power users would be great)

Of course, we'll offer some sort of SRS tool for going over the exercises that you've chosen to include that link back to respective PLPs. Pages without any exercises can have a default "remind me about this page" option.

Bring home message here is: You get the resources of a wiki without the bloat. Combine that with SRS and you've turned the data of the web into a lean, mean learning machine just for you.

Open questions:

  * Thinking back to LSSoup, how will we alert people when there is new discussion or resources available for their pages?
  * Are components the best way to break up pages?
  * Will users be okay with the "sequence of pages" interaction, or do we need a more fluid way to handle viewing lessons (whatever those are) as well? 
  * How will users perceive the cost and benefits of customizing their own pages? Of course, not all users are created equal. Some that may be more inclined include teachers who want to create a custom course from a standard curriculum (basically the definition of a teacher, so if they find our tool easy to use, it could be a winner) or an active researcher in a field, who learns from the existing pages, publishes a couple new ones, and earns a PhD!
